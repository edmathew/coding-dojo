<?xml version = "1.0" encoding = "UTF-8"?>
<project name = "AntBuilder Macros" basedir = ".">

  <description>${project_name} v${project_version} - Macros v1.0.2.</description>

  <macrodef name = "shell" description = "Defines how to execute shell commands ( OS specific ).">
    <attribute name = "command"   />
    <attribute name = "arguments" />
    <attribute name = "fails"     />

    <element name = "shellredirector" optional = "true" />

    <sequential>
      <echo>Arguments: @{arguments}</echo>
      <exec osfamily = "windows" executable = "@{command}" newenvironment = "false" vmlauncher = "false" failonerror = "@{fails}">
        <arg line = "@{arguments}" />
        <shellredirector />
      </exec>
      <exec osfamily = "unix" executable = "@{command}" newenvironment = "false" failonerror = "@{fails}">
        <arg line = "@{arguments}" />
        <shellredirector />
      </exec>
    </sequential>
  </macrodef>

  <macrodef name = "log" description = "Echos a given message if output flag is on">
    <attribute name = "message"  />
    <attribute name = "output.flag" default = "off" />

    <sequential>
      <if>
        <equals arg1 = "@{output.flag}" arg2 = "on" />
        <then>
          <echo message = "@{message}" />
        </then>
      </if>
    </sequential>
  </macrodef>

  <macrodef name = "iterate" description = "Generic iterator for main targets to loop.">
    <attribute name = "properties.folder"  />
    <attribute name = "output.flag" default = "on" />
    <element name = "wrap-sequential" optional = "false" />

    <sequential>
      <local name = "property-file-list"    />
      <local name = "property-file-counter" />
      <fileset id = "property-file-set" dir = "${applications_folder}/${application_folder}/@{properties.folder}" includes = "*.properties" />
      <property name = "property-file-list" refid = "property-file-set" />
      <resourcecount property = "property-file-counter" refid = "property-file-set" />
      <log message = "Found ${property-file-counter} property files under @{properties.folder}/ folder." output.flag = "@{output.flag}" />

      <for list = "${property-file-list}" delimiter = ";" trim = "true" param = "properties.file">
        <sequential>
          <var file = "${applications_folder}/${application_folder}/@{properties.folder}/@{properties.file}" />
          <propertyregex property      = "archive.name"
                         input         = "@{properties.file}"
                         regexp        = "(.+)\.properties"
                         select        = "\1"
                         override      = "true"
                         casesensitive = "false" />

          <wrap-sequential />

          <log message = "    File @{properties.folder}/@{properties.file} processed." output.flag = "@{output.flag}" />
        </sequential>
      </for>
    </sequential>
  </macrodef>

  <macrodef name = "prepare" description = "Prepares metadata files for publishing targets.">
    <attribute name = "properties.folder" />
    <attribute name = "properties.file"   />

    <sequential>
      <mkdir dir = "${build_folder}/${archive.name}" />

      <if>
        <and>
          <equals arg1 = "${web_template_include}" arg2 = "yes" />
          <not>
            <uptodate srcfile    = "${applications_folder}/${application_folder}/@{properties.folder}/web.xml"
                      targetfile = "${build_folder}/${archive.name}/web.xml" />
          </not>
        </and>
        <then>
          <copy file   = "${applications_folder}/${application_folder}/@{properties.folder}/web.xml"
                tofile = "${build_folder}/${archive.name}/web.xml" />
          <log message = "    Prepared web.xml for ${archive.name}" output.flag = "on" />
        </then>
      </if>

      <if>
        <and>
          <equals arg1 = "${persistence_template_include}" arg2 = "yes" />
          <not>
            <uptodate srcfile    = "${applications_folder}/${application_folder}/@{properties.folder}/persistence.xml"
                      targetfile = "${build_folder}/classes/META-INF/persistence.xml" />
          </not>
        </and>
        <then>
          <copy file   = "${applications_folder}/${application_folder}/@{properties.folder}/persistence.xml"
                tofile = "${build_folder}/${archive.name}/classes/META-INF/persistence.xml">
            <filterchain>
              <replacetokens begintoken = "[" endtoken = "]">
                <token key = "name"        value = "${persistence_unit_name}"        />
                <token key = "description" value = "${persistence_unit_description}" />
                <token key = "provider"    value = "${jpa_provider}"                 />
                <token key = "datasource"  value = "${jpa_datasource}"               />
                <token key = "driver"      value = "${jdbc_driver}"                  />
                <token key = "url"         value = "${jdbc_url}"                     />
                <token key = "username"    value = "${jdbc_username}"                />
                <token key = "password"    value = "${jdbc_password}"                />
              </replacetokens>
            </filterchain>
          </copy>
          <log message = "    Prepared persistence.xml for ${archive.name}" output.flag = "on" />
        </then>
      </if>

      <if>
        <and>
          <equals arg1 = "${ejb_template_include}" arg2 = "yes" />
          <not>
            <uptodate srcfile    = "${applications_folder}/${application_folder}/@{properties.folder}/ejb-jar.xml"
                      targetfile = "${build_folder}/META-INF/${archive.name}/ejb-jar.xml" />
          </not>
        </and>
        <then>
          <copy file   = "${applications_folder}/${application_folder}/@{properties.folder}/ejb-jar.xml"
                tofile = "${build_folder}/META-INF/${archive.name}/ejb-jar.xml">
            <filterchain>
              <replacetokens begintoken = "[" endtoken = "]">
                <token key = "ejb_display_name" value = "${ejb_display_name}" />
                <token key = "ejb_description"  value = "${ejb_description}"  />
                <token key = "ejb_name"         value = "${ejb_name}"         />
                <token key = "ejb_class"        value = "${ejb_class}"        />
                <token key = "session_type"     value = "${session_type}"     />
              </replacetokens>
            </filterchain>
          </copy>
          <log message = "    Prepared @{properties.folder}/${ejb_template_include}" output.flag = "on" />
        </then>
      </if>
    </sequential>
  </macrodef>

  <macrodef name = "process-libraries-list" description = "Copies a set of libraries from their original folder to destination folder.">
    <attribute name = "libraries-file" />
    <attribute name = "to-folder"      />

    <sequential>
      <local name = "libraries-list" />
      <loadfile property = "libraries-list" srcFile = "${applications_folder}/${application_folder}/@{libraries-file}">
        <filterchain>
          <striplinecomments>
            <comment value = "#"    />
            <comment value = ";"    />
            <comment value = "--"   />
            <comment value = "REM " />
            <comment value = "rem " />
            <comment value = "//"   />
          </striplinecomments>
          <trim        />
          <ignoreblank />
        </filterchain>
      </loadfile>

      <if>
        <isset property = "libraries-list" />
        <then>
          <for list = "${libraries-list}" delimiter = "${line.separator}" trim = "true" param = "library-folder">
            <sequential>
              <copy-library from-folder = "${vendors_folder}/@{library-folder}" to-folder = "@{to-folder}/@{library-folder}" />
            </sequential>
          </for>
        </then>
      </if>
    </sequential>
  </macrodef>

  <macrodef name = "copy-library" description = "Copies static libraries from original folder to destination folder.">
    <attribute name = "to-folder"   />
    <attribute name = "from-folder" />

    <sequential>
      <copy todir = "@{to-folder}">
        <fileset dir = "@{from-folder}">
          <include name = "**/*.jar" />

          <exclude name = "**/*-javadoc.jar" />
          <exclude name = "**/*-sources.jar" />
        </fileset>
      </copy>
    </sequential>
  </macrodef>

</project>
